
name: Docker, Helm/Check and push 

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  image_check_changes:

    runs-on: ubuntu-latest
    
    outputs:
      img_file_changed: ${{ steps.check_img_file_changed.outputs.img_file_changed }}

    steps:
        - uses: actions/checkout@v3
          with:
          # Checkout as many commits needed for the diff
            fetch-depth: 2

        - shell: pwsh
          id: check_img_file_changed
          run: |
            # Diff HEAD with the previous commit
            $diff = git diff --name-only HEAD^ HEAD
            # Check if a file under app_code/ has changed (added, modified, deleted)
            $SourceDiff = $diff | Where-Object { $_ -match '^alaya/' }
            $HasDiff = $SourceDiff.Length -gt 0
            # Set the output named "img_file_changed"
            
            Write-Host "::set-output name=img_file_changed::$HasDiff"
  helm_check_changes:

    runs-on: ubuntu-latest
    
    outputs:
      helm_file_changed: ${{ steps.check_helm_files_changed.outputs.helm_file_changed }}

    steps:
        - uses: actions/checkout@v3
          with:
          # Checkout as many commits needed for the diff
            fetch-depth: 2

        - shell: pwsh
          id: check_helm_files_changed
          run: |
            # Diff HEAD with the previous commit
            $diff = git diff --name-only HEAD^ HEAD
            # Check if a file under alaya/ or under alaya-HelmChart/ has changed (added, modified, deleted)
            $SourceDiff = $diff | Where-Object { $_ -match '^kubernetes_deployment/' -or $_ -match '^alaya-HelmChart/' -or $_ -match '^alaya-HelmChart/templates/' }
            $HasDiff = $SourceDiff.Length -gt 0
            # Set the output named "helm_file_changed"
            
            Write-Host "::set-output name=helm_file_changed::$HasDiff"
  build_push:

    runs-on: ubuntu-latest
    needs: [ image_check_changes ]
    if: ${{ (needs.image_check_changes.outputs.img_file_changed == 'True' ) }}

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10' 
      

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          push: true
          file: ./Dockerfile
          tags: artemborodenko/alaya:latest